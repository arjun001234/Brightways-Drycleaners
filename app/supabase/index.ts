/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          name?: parameters["rowFilter.profiles.name"];
          contactNumber?: parameters["rowFilter.profiles.contactNumber"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          name?: parameters["rowFilter.profiles.name"];
          contactNumber?: parameters["rowFilter.profiles.contactNumber"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          name?: parameters["rowFilter.profiles.name"];
          contactNumber?: parameters["rowFilter.profiles.contactNumber"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/reviews": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          profile_id?: parameters["rowFilter.reviews.profile_id"];
          review?: parameters["rowFilter.reviews.review"];
          rating?: parameters["rowFilter.reviews.rating"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["reviews"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** reviews */
          reviews?: definitions["reviews"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          profile_id?: parameters["rowFilter.reviews.profile_id"];
          review?: parameters["rowFilter.reviews.review"];
          rating?: parameters["rowFilter.reviews.rating"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          profile_id?: parameters["rowFilter.reviews.profile_id"];
          review?: parameters["rowFilter.reviews.review"];
          rating?: parameters["rowFilter.reviews.rating"];
        };
        body: {
          /** reviews */
          reviews?: definitions["reviews"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/contacts": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          contactNumber?: parameters["rowFilter.contacts.contactNumber"];
          message?: parameters["rowFilter.contacts.message"];
          id?: parameters["rowFilter.contacts.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["contacts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** contacts */
          contacts?: definitions["contacts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          contactNumber?: parameters["rowFilter.contacts.contactNumber"];
          message?: parameters["rowFilter.contacts.message"];
          id?: parameters["rowFilter.contacts.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          contactNumber?: parameters["rowFilter.contacts.contactNumber"];
          message?: parameters["rowFilter.contacts.message"];
          id?: parameters["rowFilter.contacts.id"];
        };
        body: {
          /** contacts */
          contacts?: definitions["contacts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    contactNumber?: string;
  };
  reviews: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: string;
    /** Format: text */
    review?: string;
    /** Format: real */
    rating?: number;
  };
  contacts: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: character varying */
    contactNumber: string;
    /** Format: text */
    message: string;
    /**
     * Format: uuid
     * @default extensions.uuid_generate_v4()
     */
    id?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.created_at": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: character varying */
  "rowFilter.profiles.name": string;
  /** Format: character varying */
  "rowFilter.profiles.contactNumber": string;
  /** @description reviews */
  "body.reviews": definitions["reviews"];
  /** Format: uuid */
  "rowFilter.reviews.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.reviews.created_at": string;
  /** Format: uuid */
  "rowFilter.reviews.profile_id": string;
  /** Format: text */
  "rowFilter.reviews.review": string;
  /** Format: real */
  "rowFilter.reviews.rating": string;
  /** @description contacts */
  "body.contacts": definitions["contacts"];
  /** Format: timestamp with time zone */
  "rowFilter.contacts.created_at": string;
  /** Format: character varying */
  "rowFilter.contacts.name": string;
  /** Format: character varying */
  "rowFilter.contacts.contactNumber": string;
  /** Format: text */
  "rowFilter.contacts.message": string;
  /** Format: uuid */
  "rowFilter.contacts.id": string;
}

export interface operations {}

export interface external {}
